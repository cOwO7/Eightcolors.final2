spring.application.name=springbootfinal-app

# 기상청 API
# 초단기 예보(실황, 초단기 예보, 단기예보)
apiUrl=https://apis.data.go.kr/1360000/VilageFcstInfoService_2.0
# 중기 예보(육상, 기온 예보)
apiUrl2=https://apis.data.go.kr/1360000/MidFcstInfoService
# 기상청 Key - Encoding
apiKey=Gow%2FB%2BpvwKtRdRGfWEsPYdmR4X8u8LB342Dka9AaCg6XgZaYHeeOBcWH8aK9VT%2BfYSDLtu0o9k6WY%2BRp7E00ZA%3D%3D

# 파일 업로드 저장소
# 이미지
#UPLOAD_DIR=src/main/resources/static/images/files/
UPLOAD_DIR=D:/images/files/

# Https 인증서
server.ssl.key-store=classpath:mykeystore.jks
server.ssl.key-store-password=123456
server.ssl.key-store-type=JKS
server.ssl.key-alias=mykey
server.port=8080
# HTTP 포트 8080에서 HTTPS로 리다이렉트
#server.http.port=8081

#spring.web.resources.static-locations=classpath:/static/
# 네이버 Map Api
naver.map.clientId=51mvmkqypm
naver.map.ClientSecret=7kHJtTj3bXQfdBeJHSfIMethRDn2UJgeouqRhLuG

# 로그 처리 설정
#logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.web=DEBUG
#logging.level.com.springbootfinal.app=DEBUG
#logging.level.root=INFO
# Hibernate 로그도 출력하려면 추가 (optional)
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=trace


# DB
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/eightcolors2025?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

# Database 접속 설정
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.datasource.username=eightcolors2025
spring.datasource.password=eightcolors2025

# MyBatis
mybatis.type-aliases-package=com.springbootfinal.app
mybatis.mapper-locations=classpath:mappers/**/*Mapper.xml
mybatis.configuration.map-underscore-to-camel-case=true

# 한글 처리
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true


# 정적 파일 변경 실시간 반영
spring.devtools.remote.restart.enabled=false
spring.devtools.livereload.enabled=true


# Thymeleaf 뷰 설정 - prefix와 suffix는 아래 경로가 기본 값임
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.view-names=views/*

# Thymeleaf에 대한 캐시를 남기지 않음, cache=false 설정(운영시는 true)
spring.thymeleaf.cache=false
# Thymeleaf 사용 활성화
#spring.thymeleaf.enabled=true
#렌더링 전에 템플릿 존재 여부 확인 옵션
#spring.thymeleaf.check-template=false
# Template 위치 존재 여부 확인 옵션 - 없으면 오류 발생
#spring.thymeleaf.check-template-location=true

# 파일 업로드 설정 - 최대 크기 기본이 1MB이며 초과하면 오류 발생
# 파일 한 개 당 최대 크기
spring.servlet.multipart.max-file-size=10MB
# 요청당 최대 파일 크기 - 10MB 10개까지
spring.servlet.multipart.max-request-size=100MB

# 추가
spring.main.allow-circular-references=true
spring.main.allow-bean-definition-overriding=true

spring.main.web-application-type=servlet
spring.jmx.enabled=true

# 세션 시간 늘리기
server.servlet.session.timeout=30m

# JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

#OAuth2 설정

# Google social login settings
spring.security.oauth2.client.registration.google.client-id=1066354802042-84ip54gm76uapp82e24d1474spdg8uqk.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=https://192.168.0.39:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code



# Kakao social login settings
spring.security.oauth2.client.registration.kakao.client-id=f639c866331199e7fa700a29551f6288
spring.security.oauth2.client.registration.kakao.client-secret=F4sdT63po2Yayuw4KYM39MOgQwmTmfWC
spring.security.oauth2.client.registration.kakao.redirect-uri=https://192.168.0.39:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

# Kakao OAuth2 provider settings
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Naver social login settings
spring.security.oauth2.client.registration.naver.client-id=0SgJCTibRevQZShxaQl9
spring.security.oauth2.client.registration.naver.client-secret=eUq08bGzjq
spring.security.oauth2.client.registration.naver.redirect-uri=https://192.168.0.39:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.scope=email,name
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code

# Naver OAuth2 provider settings
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Kakaopay Developers 에서 앱 생성 후 발급받은 admin key
kakaopay.api.secret.key=DEV4074E424B9E17322C18D1E352DCB7667F72CA

# Kakaopay ??? ???? ??? ID
cid=TC0ONETIME
sample.host=https://192.168.0.39:8080/

# MyBatis SQL 로그 활성화
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl