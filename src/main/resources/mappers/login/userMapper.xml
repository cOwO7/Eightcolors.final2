<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springbootfinal.app.mapper.login.UserMapper">
    <select id="findByUserNo" parameterType="long" resultType="com.springbootfinal.app.domain.login.Users">
        SELECT * FROM users WHERE user_no = #{userNo}
    </select>

    <select id="findByEmail" parameterType="string" resultType="com.springbootfinal.app.domain.login.Users">
        SELECT * FROM users WHERE email = #{email}
    </select>

    <select id="findByName" parameterType="string" resultType="com.springbootfinal.app.domain.login.Users">
        SELECT * FROM users WHERE name = #{name}
    </select>

    <select id="findByLoginType" parameterType="string" resultType="com.springbootfinal.app.domain.login.Users">
        SELECT * FROM users WHERE login_type = #{loginType}
    </select>

    <select id="findById" parameterType="string" resultType="com.springbootfinal.app.domain.login.Users">
        SELECT * FROM users WHERE id = #{id}
    </select>

    <select id="findAll" resultType="com.springbootfinal.app.domain.login.Users">
        SELECT * FROM users
    </select>

    <insert id="insertUser" parameterType="com.springbootfinal.app.domain.login.Users" useGeneratedKeys="true" keyProperty="userNo">
        INSERT INTO users(id, password, email, phone, name, zipcode, address1, address2, login_type, provider_id, reg_date, point, role)
        VALUES(#{id}, #{password}, #{email}, #{phone}, #{name}, #{zipcode}, #{address1}, #{address2}, #{loginType}, #{providerId}, #{regDate}, #{point}, #{role})
    </insert>

    <update id="updateUser" parameterType="com.springbootfinal.app.domain.login.Users">
        UPDATE users
        SET password = #{password}, email = #{email}, phone = #{phone}, name = #{name},
            zipcode = #{zipcode}, address1 = #{address1}, address2 = #{address2}, login_type = #{loginType}, provider_id = #{providerId},
            point = #{point}, role = #{role}
        WHERE user_no = #{userNo}
    </update>

    <delete id="deleteUser" parameterType="long">
        DELETE FROM users WHERE user_no = #{userNo}
    </delete>

    <select id="findRecentUsers" resultType="com.springbootfinal.app.domain.login.Users">
        SELECT * FROM users ORDER BY reg_date DESC LIMIT #{limit}
    </select>

</mapper>