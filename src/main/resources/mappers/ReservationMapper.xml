<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--	
	마이바티스 참고 사이트
	  - http://blog.mybatis.org/
	  - http://www.mybatis.org/mybatis-3/ko/index.html
	  
	@Mapper 애노테이션이 적용된 인터페이스와 맵퍼 XML파일은
	namespace 속성으로 연결되기 때문에 맵퍼 XML의 namespace를
	지정할 때 @Mapper 애노테이션이 적용된 맵퍼 인터페이스의
	완전한 클래스 이름(패키지를 포함한 이름)을 지정하면 된다.   
-->
<mapper namespace="com.springbootfinal.app.mapper.ReservationMapper">

    <!-- 방 예약 가능 여부 확인 -->
    <select id="checkRoomAvailability" resultType="int">
        SELECT COUNT(*)
        FROM reservations
        WHERE room_no = #{roomNo}
        AND (#{checkoutDate} > checkin_date
        AND checkout_date > #{checkinDate})
    </select>

    <!-- 방 가격 조회 -->
    <select id="getRoomPrice" resultType="int">
        SELECT price_per_night
        FROM residence_rooms
        WHERE room_no = #{roomNo}
    </select>

    <!-- 예약 정보 저장 -->
    <insert id="insertReservation">
        INSERT INTO reservations (
            room_no,
            user_no,
            checkin_date,
            checkout_date,
            discount_rate,
            discounted_price,
            transaction_id,
            total_price
        ) VALUES (
                     #{roomNo},
                     #{userNo},
                     #{checkinDate},
                     #{checkoutDate},
                     #{discountRate},
                     #{discountedPrice},
                     #{transactionId},
                     #{totalprice}

                 )
    </insert>

    <select id="findResidenceNameById" resultType="string">
        SELECT resid_name
        FROM residence
        WHERE resid_no = #{residNo}
    </select>

    <!-- 예약 등록 -->
    <insert id="newReservations" parameterType="Reservations">
        INSERT INTO reservations (
            user_no, room_no, checkin_date, checkout_date, total_price, discount_rate, discounted_price,
            transaction_id, payment_status, reservation_status, created_at, updated_at
        ) VALUES (
                     #{user_no}, #{room_no}, #{checkin_date}, #{checkout_date}, #{total_price}, #{discount_rate}, #{discounted_price},
                     #{transaction_id}, #{payment_status}, #{reservation_status}, NOW(), NOW()
                 )
    </insert>
    <!-- 예약 목록 조회 (사용자 기준) -->
    <select id="getReservations" parameterType="Reservations" resultType="Reservations">
        SELECT *
        FROM reservations
        WHERE
        1=1
        <if test="user_no != null and user_no != '' ">
            reservation_no = #{reservation_no}
        </if>
        ORDER BY created_at DESC
    </select>

    <!-- 예약 수정 -->
    <update id="putReservations" parameterType="Reservations">
        UPDATE reservations
        SET
        <if test="room_no != null and room_no != '' ">
            room_no = #{room_no},
        </if>
        <if test="checkin_date != null and checkin_date != '' ">
            checkin_date = #{checkin_date},
        </if>
        <if test="checkout_date != null and checkout_date != '' ">
            checkout_date = #{checkout_date},
        </if>
        <if test="total_price != null and total_price != '' ">
            total_price = #{total_price},
        </if>
        <if test="discount_rate != null and discount_rate != '' ">
            discount_rate = #{discount_rate},
        </if>
        <if test="discounted_price != null and discounted_price != '' ">
            discounted_price = #{discounted_price},
        </if>
        <if test="transaction_id != null and transaction_id != '' ">
            transaction_id = #{transaction_id},
        </if>
        <if test="payment_status != null and payment_status != '' ">
            payment_status = #{payment_status},
        </if>
        <if test="reservation_status != null and reservation_status != '' ">
            reservation_status = #{reservation_status},
        </if>
        updated_at = NOW()
        WHERE reservation_no = #{reservation_no}
    </update>

    <!-- 예약 삭제 -->
    <delete id="delReservations" parameterType="Reservations">
        DELETE FROM reservations WHERE reservation_no = #{reservationNo}
    </delete>

</mapper>




