<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
   마이바티스 참고 사이트
     - http://blog.mybatis.org/
     - http://www.mybatis.org/mybatis-3/ko/index.html

   @Mapper 애노테이션이 적용된 인터페이스와 맵퍼 XML파일은
   namespace 속성으로 연결되기 때문에 맵퍼 XML의 namespace를
   지정할 때 @Mapper 애노테이션이 적용된 맵퍼 인터페이스의
   완전한 클래스 이름(패키지를 포함한 이름)을 지정하면 된다.
-->
<mapper namespace="com.springbootfinal.app.mapper.ReservationMapper">

    <!-- 방 예약 가능 여부 확인 -->
    <select id="checkRoomAvailability" resultType="int">
        SELECT COUNT(*)
        FROM reservations
        WHERE room_no = #{roomNo}
          AND (#{checkoutDate} > checkin_date
            AND checkout_date > #{checkinDate})
          AND reservation_status != '예약 취소'
    </select>

    <!-- 방 가격 조회 -->
    <select id="getRoomPrice" resultType="int">
        SELECT price_per_night
        FROM residence_rooms
        WHERE room_no = #{roomNo}
    </select>

    <!-- 예약 정보 저장 -->
    <insert id="insertReservation">
        INSERT INTO reservations (
            room_no,
            user_no,
            checkin_date,
            checkout_date,
            discount_rate,
            discounted_price,
            transaction_id,
            total_price,
            payment_status
        ) VALUES (
                     #{roomNo},
                     #{userNo},
                     #{checkinDate},
                     #{checkoutDate},
                     #{discountRate},
                     #{discountedPrice},
                     #{transactionId},
                     #{totalprice},
                     #{paymentStatus}

                 )
    </insert>

    <!--예약정보 출력-->
    <select id="selectReservationByTransactionId" resultType="Reservation">
        SELECT
            reservation_no,
            user_no,
            room_no,
            checkin_date,
            checkout_date,
            total_price,
            discount_rate,
            discounted_price,
            transaction_id,
            payment_status,
            reservation_status,
            created_at
        FROM
            reservations
        WHERE
            transaction_id = #{transactionId}
    </select>

    <!-- 숙소 이름 가져오는 쿼리문 -->
    <select id="findResidenceAndRoomById" resultType="map">
        SELECT residence.resid_name AS residName, residence_rooms.room_name AS roomName
        FROM residence
                 JOIN residence_rooms ON residence.resid_no = residence_rooms.resid_no
        WHERE residence.resid_no = #{residNo} AND residence_rooms.room_no = #{roomNo};
    </select>
    <!--예약하는 유저의 정보-->
    <select id="getReservationUserByUserNo" parameterType="long" resultType="ReservationUserDTO">
        SELECT
            user_no,
            id,
            password,
            email,
            phone,
            name,
            zipcode,
            address1,
            address2,
            login_type,
            provider_id,
            reg_date,
            role
        FROM
            users
        WHERE
            user_no = #{userNo}
    </select>

    <!-- 예약 등록 -->
    <insert id="newReservations" parameterType="Reservations">
        INSERT INTO reservations (
            user_no, room_no, checkin_date, checkout_date, total_price, discount_rate, discounted_price,
            transaction_id, payment_status, reservation_status, created_at, updated_at
        ) VALUES (
                     #{user_no}, #{room_no}, #{checkin_date}, #{checkout_date}, #{total_price}, #{discount_rate}, #{discounted_price},
                     #{transaction_id}, #{payment_status}, #{reservation_status}, NOW(), NOW()
                 )
    </insert>
    <!-- 예약 목록 조회 (사용자 기준) -->
    <select id="getReservations" parameterType="Reservations" resultType="Reservations">
        SELECT *
        FROM reservations
        WHERE
        1=1
        <if test="reservationNo != null and reservationNo != '' ">
            AND reservation_no = #{reservationNo}
        </if>
    </select>

    <!-- 예약 수정 -->
    <update id="putReservations" parameterType="Reservations">
        UPDATE reservations
        SET
        <if test="roomNo != null and roomNo != '' ">
            room_no = #{roomNo},
        </if>
        <if test="userNo != null and userNo != '' ">
            user_no = #{userNo},
        </if>
        <if test="checkinDate != null and checkinDate != '' ">
            checkin_date = #{checkinDate},
        </if>
        <if test="checkoutDate != null and checkoutDate != '' ">
            checkout_date = #{checkoutDate},
        </if>
        <if test="totalPrice != null and totalPrice != '' ">
            total_price = #{totalPrice},
        </if>
        <if test="discountRate != null and discountRate != '' ">
            discount_rate = #{discountRate},
        </if>
        <if test="discountedPrice != null and discountedPrice != '' ">
            discounted_price = #{discountedPrice},
        </if>
        <if test="transactionId != null and transactionId != '' ">
            transaction_id = #{transactionId},
        </if>
        <if test="paymentStatus != null and paymentStatus != '' ">
            payment_status = #{paymentStatus},
        </if>
        <if test="reservationStatus != null and reservationStatus != '' ">
            reservation_status = #{reservationStatus},
        </if>
        updated_at = NOW()
        WHERE reservation_no = #{reservationNo}
    </update>

    <!-- 예약 삭제 -->
    <delete id="delReservations" parameterType="Reservations">
        DELETE FROM reservations WHERE reservation_no = #{reservationNo}
    </delete>


    <resultMap id="reservationResultMap" type="com.springbootfinal.app.domain.reservations.Reservations">
        <id property="reservationNo" column="reservation_no"/> <!-- 수정된 부분 -->
        <result property="userNo" column="user_no"/>
        <result property="roomNo" column="room_no"/>
        <result property="roomName" column="room_name"/>
        <result property="residName" column="residName"/>
        <result property="checkinDate" column="checkin_date"/>
        <result property="checkoutDate" column="checkout_date"/>
        <result property="totalPrice" column="total_price"/>
        <result property="discountRate" column="discount_rate"/>
        <result property="discountedPrice" column="discounted_price"/>
        <result property="transactionId" column="transaction_id"/>
        <result property="paymentStatus" column="payment_status"/>
        <result property="reservationStatus" column="reservation_status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>


    <select id="getReservationByUserNo" resultMap="reservationResultMap">
        SELECT r.reservation_no, r.user_no, r.room_no, res.resid_name AS residName, r.checkin_date, r.checkout_date,
               r.total_price, r.discount_rate, r.discounted_price, r.transaction_id, r.payment_status,
               r.reservation_status, r.created_at, r.updated_at
        FROM reservations r
                 JOIN residence_rooms rr ON r.room_no = rr.room_no
                 JOIN residence res ON rr.resid_no = res.resid_no
        WHERE r.user_no = #{userNo}
    </select>


</mapper>
